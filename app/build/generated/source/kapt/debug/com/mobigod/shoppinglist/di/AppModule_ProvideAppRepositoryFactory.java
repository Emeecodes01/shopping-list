// Generated by Dagger (https://dagger.dev).
package com.mobigod.shoppinglist.di;

import com.mobigod.shoppinglist.data.repo.Repository;
import com.mobigod.shoppinglist.data.source.LocalDSContract;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;

@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AppModule_ProvideAppRepositoryFactory implements Factory<Repository> {
  private final AppModule module;

  private final Provider<LocalDSContract> localDSContractProvider;

  public AppModule_ProvideAppRepositoryFactory(AppModule module,
      Provider<LocalDSContract> localDSContractProvider) {
    this.module = module;
    this.localDSContractProvider = localDSContractProvider;
  }

  @Override
  public Repository get() {
    return provideAppRepository(module, localDSContractProvider.get());
  }

  public static AppModule_ProvideAppRepositoryFactory create(AppModule module,
      Provider<LocalDSContract> localDSContractProvider) {
    return new AppModule_ProvideAppRepositoryFactory(module, localDSContractProvider);
  }

  public static Repository provideAppRepository(AppModule instance,
      LocalDSContract localDSContract) {
    return Preconditions.checkNotNull(instance.provideAppRepository(localDSContract), "Cannot return null from a non-@Nullable @Provides method");
  }
}
